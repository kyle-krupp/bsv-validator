{"version":3,"sources":["app/components/card/index.tsx","app/components/form/sendResult/index.tsx","app/components/form/index.jsx","app/components/redeem/index.jsx","app/components/redeemResult/index..jsx","app/components/layout/header/index.jsx","app/components/layout/footer/index.jsx","app/components/login/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["CardContainer","props","className","bordered","children","SendResult","justify","align","xs","span","lg","src","alt","style","marginBottom","color","textAlign","fontSize","backgroundColor","borderColor","type","icon","CopyOutlined","onClick","navigator","clipboard","writeText","redemptionUrl","GiftForm","history","useHistory","baseUrl","window","location","href","includes","Form","useForm","form","useState","isSubmitted","setSubmitResult","userInfo","setUserInfo","loading","setLoading","redemptionToken","setRedemptionToken","setRedemptionUrl","authToken","URLSearchParams","search","get","split","toString","localStorage","setItem","userName","name","replace","getItem","push","sendGift","email","amount","note","a","requestOptions","method","headers","body","JSON","stringify","currency","fetch","response","json","giftData","sessionStorage","useEffect","logUser","offset","gutter","sm","md","placement","title","getSymbolFromCurrency","profilePictureUrl","size","xl","xxl","id","layout","onFinish","values","onFinishFailed","errorInfo","console","log","Item","placeholder","htmlType","RedeemPage","app-id","RedeemResult","status","setStatus","redeemGift","clear","Header","Layout","MittoHeader","isDesktop","useMediaQuery","query","isTablet","isMobile","Footer","MittoFooter","marginTop","float","width","LoginCard","Content","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAgB,SAACC,GAAD,OAAuD,cAAC,IAAD,CAAMC,UAAW,OAAQC,UAAU,EAAnC,SAA2CF,EAAMG,Y,wHCAxHC,EAAa,SAACJ,GACzB,OACF,cAAC,IAAD,CAAKK,QAAQ,SAASC,MAAM,SAASL,UAAU,oBAA/C,SACE,eAAC,IAAD,CAAKM,GAAI,CAACC,KAAM,IAAKC,GAAI,CAACD,KAAK,IAA/B,UACE,cAAC,IAAD,CAAKH,QAAQ,SAAb,SACE,qBAAKK,IAAI,0EAA0EC,IAAI,UAAUC,MAAO,CAACC,aAAc,YAEzH,eAAC,IAAD,CAAKR,QAAQ,SAAb,UACA,oBAAIO,MAAO,CAACE,MAAO,UAAWC,UAAW,UAAzC,yBACA,mBAAGH,MAAO,CAACE,MAAO,UAAWE,SAAU,OAAQD,UAAW,UAA1D,gHACA,mBAAGH,MAAO,CAACE,MAAO,UAAWE,SAAU,OAAQD,UAAW,UAA1D,8DACD,cAAC,IAAD,CAAQd,UAAW,wBAAyBW,MAAO,CAACK,gBAAiB,QAASH,MAAO,UAAWI,YAAa,WAAYC,KAAK,UAAwBC,KAAM,cAACC,EAAA,EAAD,IAAkBC,QAAS,kBAAMC,UAAUC,UAAUC,UAAUzB,EAAM0B,gBAAjO,4BAA4I,oBCPlIC,EAAW,WAAO,IAAD,EACxBC,EAAUC,cACRC,EAAUC,OAAOC,SAASC,KAAKC,SAAS,aAAe,iBAAmB,qBAFpD,EAGbC,IAAKC,UAAbC,EAHqB,sBAIWC,oBAAS,GAJpB,mBAIrBC,EAJqB,KAIRC,EAJQ,OAKIF,mBAAS,IALb,mBAKrBG,EALqB,KAKXC,EALW,OAMEJ,oBAAS,GANX,mBAMrBK,EANqB,KAMZC,EANY,OAOkBN,mBAAS,IAP3B,mBAOrBO,EAPqB,KAOJC,EAPI,OAQcR,mBAAS,IARvB,mBAQrBZ,EARqB,KAQNqB,EARM,KAUtBC,EADS,IAAIC,gBAAgBlB,OAAOC,SAASkB,QAC1BC,IAAI,aAAaC,MAAM,KAAKC,WACrDC,aAAaC,QAAQ,YAAaP,GAClC,IAAMQ,EAAQ,OAAGf,QAAH,IAAGA,GAAH,UAAGA,EAAUgB,YAAb,aAAG,EAAgBC,QAAQ,OAAQ,MAE9BJ,aAAaK,QAAQ,oBAEU/B,EAAQgC,KAAR,gCAAsCZ,IAIxF,IAAMa,EAAQ,uCAAG,WAAOC,EAAOC,EAAQC,GAAtB,mBAAAC,EAAA,6DACTC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAE,uBAA0BvB,EACjD,OAAWe,EACX,aAAgBtB,EAAS+B,SACzB,cAAiBV,EACjB,KAAQE,KARK,SAWMS,MAAM,8BAA+BP,GAX3C,cAWXQ,EAXW,gBAYMA,EAASC,OAZf,OAYXC,EAZW,OAajB9B,EAAmB8B,EAAS/B,iBAC5BE,EAAiB,GAAD,OAAIjB,EAAJ,mCAAsC8C,EAAS/B,kBAC/DgC,eAAetB,QAAQ,kBAAmBqB,EAAS/B,iBAflC,4CAAH,0DAkBdiC,qBAAU,WACR,IAAMC,EAAO,uCAAG,8BAAAd,EAAA,6DACRC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAE,kBAAqBvB,KAJlC,SAMSyB,MAAM,+BAAgCP,GAN/C,cAMRQ,EANQ,YAOdhC,EAPc,SAOIgC,EAASC,OAPb,6EAAH,qDASb/B,GAAW,GACXmC,IACAnC,GAAW,KACZ,CAACI,IAWF,OACE,qCACF,cAAC,IAAD,UACE,cAAC,IAAD,CAAKzC,GAAI,CAACC,KAAM,EAAGwE,OAAQ,IAAKvE,GAAI,CAACD,KAAM,EAAGwE,OAAQ,IAAtD,SACE,eAAC,IAAD,CAAK/E,UAAU,WAAWgF,OAAQ,CAAE1E,GAAI,EAAG2E,GAAI,GAAIC,GAAI,GAAI1E,GAAI,IAA/D,UACE,cAAC,IAAD,CAAKF,GAAI,CAACC,KAAM,IAAKC,GAAI,CAACD,KAAK,GAA/B,SACE,cAAC,IAAD,CAAS4E,UAAU,SAASC,MAAM,iHAAlC,SACE,qBAAK3E,IAAI,2DAA2DC,IAAI,aAG5E,cAAC,IAAD,CAAKJ,GAAI,CAACC,KAAM,IAAKC,GAAI,CAACD,KAAK,GAA/B,SACI,yBAAQP,UAAU,yCAAlB,UACCqF,IAAsB7C,EAAS+B,UAAW/B,EAAS+B,qBAO7DjC,EAAe,cAAC,EAAD,CAAYM,gBAAiBA,EAAiBnB,cAAeA,IAC7EiB,EAAU,YACZ,mCACA,cAAC,IAAD,CAAK1C,UAAU,YAAf,SACA,eAAC,EAAD,WACA,cAAC,IAAD,CAAQS,IAAK+B,EAAS8C,kBAAmBC,KAAM,CAAEjF,GAAI,GAAI2E,GAAI,GAAIC,GAAI,GAAI1E,GAAI,GAAIgF,GAAI,GAAIC,IAAK,MAC9F,qBAAIC,GAAG,WAAP,cAAoBnC,KAEpB,eAAC,IAAD,CACEoC,OAAQ,WACRvD,KAAMA,EACNwD,SAvCiB,SAACC,GAChBjC,EAASiC,EAAOhC,MAAOgC,EAAO/B,OAAQ+B,EAAO9B,MAC7CxB,GAAgB,IAsClBuD,eAnCuB,SAACC,GACtBC,QAAQC,IAAI,UAAWF,IA8B3B,UAMA,eAAC,IAAKG,KAAN,WACE,qBAAKzF,IAAI,gEAAgEC,IAAI,YAAYV,UAAU,cACnG,cAAC,IAAKkG,KAAN,CAAW1C,KAAK,QAAhB,SACE,cAAC,IAAD,CAAO2C,YAAY,yCAIvB,eAAC,IAAKD,KAAN,WACI,qBAAKzF,IAAI,6DAA6DC,IAAI,SAASV,UAAU,cAC7F,cAAC,IAAKkG,KAAN,CAAW1C,KAAK,SAAhB,SACE,cAAC,IAAD,CAAO2C,YAAY,sBAIzB,eAAC,IAAKD,KAAN,WACI,qBAAKzF,IAAI,kEAAkEC,IAAI,cAAcV,UAAU,cACvG,cAAC,IAAKkG,KAAN,CAAW1C,KAAK,OAAhB,SACE,cAAC,IAAD,CAAO2C,YAAY,2BAIzB,cAAC,IAAKD,KAAN,UACE,eAAC,IAAD,CAAQlG,UAAW,cAAekB,KAAK,UAAUkF,SAAS,SAA1D,UACE,qBAAK3F,IAAI,2DAA2DC,IAAI,OAAOV,UAAU,gBAD3F,0BC3HWqG,EAAa,WACxB,IACMzD,EADS,IAAII,gBAAgBlB,OAAOC,SAASkB,QACpBC,IAAI,mBACnCG,aAAaC,QAAQ,kBAAmBV,GAGxC,OACE,qCACA,qBAAKjC,MAAO,CAACE,MAAO,SAApB,+DACA,qBAAKQ,QALqB,kBAAMS,OAAOC,SAASC,KAAO,yEAKpB0D,GAAG,gBAAgBY,SAAO,UAA7D,uCCRSC,EAAe,WAAO,IAAD,EACJlE,mBAAS,KADL,mBACzBmE,EADyB,KACjBC,EADiB,KAE1B1D,EAAYM,aAAaK,QAAQ,aACjCd,EAAkBS,aAAaK,QAAQ,mBAEvCgD,EAAU,uCAAG,8BAAA1C,EAAA,6DACXC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB,0BAA6BvB,EAC7B,gBAAmBH,KANR,SASM4B,MAAM,qCAAsCP,GATlD,OASXQ,EATW,OAUjBgC,EAAUhC,EAAS+B,QAVF,2CAAH,qDAkBhB,OALA3B,qBAAU,WACT6B,IACArD,aAAasD,UAEX,IACI,qBAAKhG,MAAO,CAACE,MAAO,SAApB,SAA0C,MAAX2F,EAAiB,yDAA0D,kC,iBCvB3GI,EAAWC,IAAXD,OAEKE,EAAc,WACzB,IAAMC,EAAYC,wBAAc,CAC9BC,MAAO,+BAGHC,EAAWF,wBAAc,CAAEC,MAAO,wBAGlCE,EAAWH,wBAAc,CAAEC,MAAO,uBAIxC,OAAO,eAACL,EAAD,WACJG,IAAcG,IAAaC,GAC5B,qBAAK1G,IAAI,8DAA8DC,IAAI,iBAE1EwG,IAAaC,GAAY,qBAAK1G,IAAI,qEAAqEC,IAAI,iBAC3GyG,GAAY,qBAAK1G,IAAI,qEAAqEC,IAAI,qBCnB3F0G,EAAWP,IAAXO,OAEKC,EAAc,WACzB,IAAMN,EAAYC,wBAAc,CAC9BC,MAAO,+BAGHC,EAAWF,wBAAc,CAAEC,MAAO,wBAGlCE,EAAWH,wBAAc,CAAEC,MAAO,uBAIxC,OAAO,eAACG,EAAD,CAAQzG,MAAO,CAAC2G,UAAW,QAA3B,UACJP,IAAcG,IAAaC,GAC5B,qBAAKxG,MAAO,CAAC4G,MAAO,QAASC,MAAO,QAAS/G,IAAI,sEAAsEC,IAAI,iBAE1HwG,IAAaC,GAAY,qBAAKxG,MAAO,CAAC4G,MAAO,QAASC,MAAO,QAAS/G,IAAI,qEAAqEC,IAAI,iBACnJyG,GAAY,qBAAKxG,MAAO,CAAC4G,MAAO,QAASC,MAAO,QAAS/G,IAAI,qEAAqEC,IAAI,qBCrB9H+G,EAAY,WAEvB,OACE,qCACI,yDACA,2DACA,qBAAKpG,QALiB,kBAAMS,OAAOC,SAASC,KAAO,yEAKhB0D,GAAG,gBAAgBY,SAAO,UAA7D,kCCMAoB,EAAYb,IAAZa,QAmCOC,EAlCH,WAEV,OACF,cAAC,IAAD,UACE,eAAC,IAAD,WACA,cAAC,EAAD,IACA,cAACD,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,IAAD,CAAK7H,UAAW,YAAhB,SACA,cAAC,EAAD,UACC,cAAC,IAAD,CAAKO,KAAM,GAAX,SACG,cAAC,EAAD,YAKR,cAAC,IAAD,CAAOqH,KAAK,QAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,UAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,EAAD,WAIR,cAAC,EAAD,UC7BaE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3fb65208.chunk.js","sourcesContent":["import React, { PropsWithChildren } from 'react'\nimport { Card } from 'antd'\n\nexport const CardContainer = (props: PropsWithChildren<any>): React.ReactElement => <Card className={'card'} bordered={false}>{props.children}</Card>","import { Button, Row, Col } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons'\n\nexport const SendResult = (props) => {\n  return (\n<Row justify=\"center\" align=\"middle\" className=\"send-gift-section\">\n  <Col xs={{span: 18}} lg={{span:12}} >\n    <Row justify=\"center\">\n      <img src=\"https://mitto-bsv-gifter.s3.amazonaws.com/payment-generated-success.png\" alt=\"success\" style={{marginBottom: \"30px\"}}/>\n    </Row>\n    <Row justify=\"center\">\n    <h1 style={{color: \"#21CA8A\", textAlign: \"center\"}}>Email Sent!</h1>\n    <p style={{color: \"#5A728A\", fontSize: \"20px\", textAlign: \"center\"}}>Recipient will be asked to download HandCash. They will receive your gift to get started with BSV.</p>\n    <p style={{color: \"#5A728A\", fontSize: \"15px\", textAlign: \"center\"}}>Alternatively share this url with the recipient:</p>\n   <Button className={\"button send-gift-copy\"} style={{backgroundColor: \"white\", color: \"#A6B0C3\", borderColor: \"#A6B0C3\"}} type=\"primary\" key=\"console\" icon={<CopyOutlined />} onClick={() => navigator.clipboard.writeText(props.redemptionUrl)}>\n   Copy Secret URL\n   </Button>\n   </Row>\n  </Col>\n  </Row>\n  )\n}","import {useState, useEffect} from 'react';\nimport { Form, Input, Button, Avatar, Row, Col, Tooltip } from 'antd';\nimport { CardContainer } from '../card';\nimport { useHistory } from 'react-router-dom'\nimport getSymbolFromCurrency from 'currency-symbol-map'\nimport { SendResult } from './sendResult'\n\nexport const GiftForm = () => {\n  let history = useHistory()\n  const baseUrl = window.location.href.includes(\"localhost\") ? \"localhost:3000\" : \"https://mitto.cash\"\n  const [form] = Form.useForm()\n  const [isSubmitted, setSubmitResult] = useState(false)\n  const [userInfo, setUserInfo] = useState({})\n  const [loading, setLoading] = useState(false);\n  const [redemptionToken, setRedemptionToken] = useState('')\n  const [redemptionUrl, setRedemptionUrl] = useState('')\n  const params = new URLSearchParams(window.location.search);\n  const authToken = params.get('authToken').split(\"&\").toString()\n  localStorage.setItem('authToken', authToken)\n  const userName = userInfo?.name?.replace(/\\s+/g, '')\n\n  const isRecipent = localStorage.getItem('redemptionToken') ? true : false\n  \n  const checkRecipientRedirect = () => isRecipent ? history.push(`redeem/gift?authToken=${authToken}`) : null\n  \n  checkRecipientRedirect()\n\n  const sendGift = async (email, amount, note) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \"giverHandcashAuthToken\": authToken,\n      \"amount\" : amount,\n      \"currencyCode\": userInfo.currency,\n      \"receiverEmail\": email,\n      \"note\": note\n    })\n  }\n  const response = await fetch('https://api.mitto.cash/gift', requestOptions)\n  const giftData = await response.json()\n  setRedemptionToken(giftData.redemptionToken)\n  setRedemptionUrl(`${baseUrl}/redeem?redemptionToken=${giftData.redemptionToken}`)\n  sessionStorage.setItem(\"redemptionToken\", giftData.redemptionToken)\n  }\n\n  useEffect(() => {\n    const logUser = async () => {\n      const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ \"handCashAuthToken\": authToken })\n      }\n      const response = await fetch('https://api.mitto.cash/login', requestOptions)\n      setUserInfo(await response.json())\n    }\n    setLoading(true)\n    logUser()\n    setLoading(false)\n}, [authToken]);\n\n  const onFinish = (values) => {\n    sendGift(values.email, values.amount, values.note)\n    setSubmitResult(true)\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <>\n  <Row>\n    <Col xs={{span: 8, offset: 12}} lg={{span: 6, offset: 16}}>\n      <Row className=\"info-row\" gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n        <Col xs={{span: 10}} lg={{span:4}}>\n          <Tooltip placement='bottom' title='This is your local currency. You can update your currency by changing the wallet settings in the HandCash app.'>\n            <img src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/info-icon.png\" alt=\"info\"/>\n          </Tooltip>\n        </Col>\n        <Col xs={{span: 10}} lg={{span:4}}>\n            <button className=\"ant-btn ant-btn-primary local-currency\">\n            {getSymbolFromCurrency(userInfo.currency)}{userInfo.currency}\n            </button>\n        </Col>\n      </Row>\n    </Col>\n  </Row>\n\n  {isSubmitted ?  <SendResult redemptionToken={redemptionToken} redemptionUrl={redemptionUrl}/> :\n  loading ? \"loading..\" :\n<>\n<Row className=\"container\">\n<CardContainer>\n<Avatar src={userInfo.profilePictureUrl} size={{ xs: 80, sm: 80, md: 80, lg: 80, xl: 80, xxl: 80 }}></Avatar>\n<h3 id=\"userName\">${userName}</h3>\n\n<Form\n  layout={'vertical'}\n  form={form}\n  onFinish={onFinish}\n  onFinishFailed={onFinishFailed}\n>\n<Form.Item>\n  <img src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/recipient-icon.png\" alt=\"recipient\" className='form-icon'/>\n  <Form.Item name=\"email\">\n    <Input placeholder=\"Enter recipient's email address\" />\n    </Form.Item>\n</Form.Item>\n\n<Form.Item>\n    <img src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/amount-icon.png\" alt=\"amount\" className='form-icon'/>\n    <Form.Item name='amount'>\n      <Input placeholder='Enter amount' />\n    </Form.Item>\n</Form.Item>\n\n<Form.Item>\n    <img src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/description-icon.png\" alt=\"description\" className='form-icon'/>\n    <Form.Item name='note'>\n      <Input placeholder='Add a description' />\n    </Form.Item>\n</Form.Item>\n\n<Form.Item>\n  <Button className={\"send-button\"} type=\"primary\" htmlType=\"submit\">\n    <img src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/send-icon.png\" alt=\"send\" className='button-icon'/>\n    Send</Button>\n</Form.Item>\n</Form>\n</CardContainer>\n</Row>\n</>\n\n}\n</>\n\n    \n  );\n}","import React from 'react'\nexport const RedeemPage = () => {\n  const params = new URLSearchParams(window.location.search);\n  const redemptionToken = params.get('redemptionToken')\n  localStorage.setItem('redemptionToken', redemptionToken)\n  const connectWithHandCash = () => window.location.href = 'https://app.handcash.io/#/authorizeApp?appId=5fff949f4033300c3d87aed1'\n\n  return (\n    <>\n    <div style={{color: 'white'}}>You got some money! Login with HandCash to redeem</div>\n    <div onClick={connectWithHandCash} id=\"connectButton\" app-id=\"123-456\">Connect with HandCash</div>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react'\n\nexport const RedeemResult = () => {\n  const [status, setStatus] = useState(200)\n  const authToken = localStorage.getItem('authToken')\n  const redemptionToken = localStorage.getItem('redemptionToken')\n\n  const redeemGift = async () => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          \"receiverHandCashAuthToken\": authToken,\n          \"redemptionToken\": redemptionToken\n        })\n    }\n    const response = await fetch('https://api.mitto.cash/gift/redeem', requestOptions)\n    setStatus(response.status)\n  }\n\n  useEffect(() => {\n   redeemGift()\n   localStorage.clear()\n     // eslint-disable-next-line\n  }, [])\n  return <div style={{color: 'white'}}>{status === 200 ? \"Redemption success! Check your HandCash wallet for $$$\": \"oops, something went wrong..\"}</div>\n}","import { Layout } from 'antd';\nimport { useMediaQuery } from 'react-responsive'\nconst { Header } = Layout\n\nexport const MittoHeader = () => {\n  const isDesktop = useMediaQuery({\n    query: '(min-device-width: 1224px)'\n  })\n\n  const isTablet = useMediaQuery({ query: '(max-width: 1224px)'})\n\n\n  const isMobile = useMediaQuery({ query: '(max-width: 850px)' })\n\n\n  //TODO: implement for portrait mode and retina?\n  return <Header>\n    {isDesktop && !isTablet && !isMobile &&\n    <img src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/Mitto+Header.png\" alt=\"Mitto Header\"/>}\n \n    {isTablet && !isMobile && <img src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/Mitto+Header+TABLET.png\" alt=\"Mitto Header\"/>}\n    {isMobile && <img src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/Mitto+Header+MOBILE.png\" alt=\"Mitto Header\"/>}\n    \n  </Header>\n}\n","import { Layout } from 'antd';\nimport { useMediaQuery } from 'react-responsive'\nconst { Footer } = Layout\n\nexport const MittoFooter = () => {\n  const isDesktop = useMediaQuery({\n    query: '(min-device-width: 1224px)'\n  })\n\n  const isTablet = useMediaQuery({ query: '(max-width: 1224px)'})\n\n\n  const isMobile = useMediaQuery({ query: '(max-width: 850px)' })\n\n\n  //TODO: implement for portrait mode and retina?\n  return <Footer style={{marginTop: \"-35%\"}}>\n    {isDesktop && !isTablet && !isMobile &&\n    <img style={{float: \"right\", width: \"100%\"}} src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/Mitto+Footer+DESKTOP.png\" alt=\"Mitto Footer\"/>}\n \n    {isTablet && !isMobile && <img style={{float: \"right\", width: \"100%\"}} src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/Mitto+Footer+TABLET.png\" alt=\"Mitto Footer\"/>}\n    {isMobile && <img style={{float: \"right\", width: \"100%\"}} src=\"https://bitcoin-sv-gifter.s3.amazonaws.com/Mitto+Footer+MOBILE.png\" alt=\"Mitto Footer\"/>}\n\n  </Footer>\n}","export const LoginCard = () => {\n  const connectWithHandCash = () => window.location.href = 'https://app.handcash.io/#/authorizeApp?appId=5fff949f4033300c3d87aed1'\n  return (\n    <>\n        <h1>Send Bitcoin via Email.</h1>\n        <h3>Simple, Fast and Private.</h3>\n        <div onClick={connectWithHandCash} id=\"connectButton\" app-id=\"123-456\">Connect HandCash</div>\n    </>\n  )\n}","import \"antd/dist/antd.css\"\nimport \"./index.css\"\nimport { Row, Col } from 'antd'\nimport { CardContainer } from './app/components/card'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { GiftForm } from \"./app/components/form/index\"\nimport { RedeemPage } from \"./app/components/redeem\"\nimport { RedeemResult } from \"./app/components/redeemResult/index.\"\nimport { MittoHeader } from \"./app/components/layout/header/index\"\nimport { MittoFooter } from \"./app/components/layout/footer\"\nimport { Layout } from 'antd'\nimport { LoginCard } from \"./app/components/login\"\nconst { Content } = Layout\nconst App = () =>  {\n  \n  return (\n<Router>\n  <Layout>\n  <MittoHeader/>\n  <Content>\n    <Switch>\n      <Route path=\"/\" exact>\n          <Row className={\"container\"}>\n          <CardContainer>\n           <Col span={36}>\n              <LoginCard/>\n            </Col>\n          </CardContainer>\n          </Row>\n      </Route>\n      <Route path=\"/send\">\n          <GiftForm/>\n      </Route> \n      <Route exact path=\"/redeem\">\n          <RedeemPage />\n      </Route>\n      <Route path=\"/redeem/gift\">\n          <RedeemResult />\n      </Route>\n    </Switch>\n  </Content>\n  <MittoFooter />\n  </Layout>\n</Router>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}